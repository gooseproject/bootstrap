Community Is Core
=================

* The technology is only one part
* community is key
* Open by default
* project should be easily forked (entirely)

Community types
===============

user community
--------------
* essential for QA work, and supporting the users
* depends totally on the core contributor community

Contributor community
---------------------
* should be 100% open.
* 'bus factor' should be ZERO.
* Anyone should be able to fork and re-do everything we've done to this point.
* This gains trust
 - which means more contributors
 - which means more users
 - which means better support

how manage contributors
=======================
* very easy to sign up.
* list of stuff to work on for beginners
* low barrier of entry
** currently github account, koji account, ssh pubkey
* source control is key "patches welcome" 
** github fork and pull-requests are execelent way to audit newcomers into the "ring of trust"
* communication is key
 - project to many (twitter/identica/the like)
 - many to many (mailing list, IRC)
 - many to project (bugtracker, documentation wiki, 

how to run^H^H^Hignore infrastructure
=====================================
* yes need to eat own dogfood (builders, koji, etc)
* however infrastructure is a big tech debt to a linux distro project.
* leverage existing non-core infrastructure providers *github* *google groups*
 - make sure there's a method for extracting the data (data lberation)
 - non-core meaning anything not *DIRECTLY* related to re-building the upstream

introducing the GOOSE project
=============================
* github page
* mailing list
* irc server
* web site -- move to github pages?
* where are we?
* where are we going?
* what's in our way?
* "how you can help"
* when we expect to be done.
